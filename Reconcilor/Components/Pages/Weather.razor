@page "/weather"

<PageTitle>Weather data</PageTitle>

<RadzenColumn SizeMD=12>
    <RadzenAlert Shade="Shade.Lighter" Variant="Variant.Flat" Size="AlertSize.Small" AlertStyle="AlertStyle.Danger" Visible="@errorVisible">Cannot save RMD</RadzenAlert>
    <RadzenTemplateForm TItem="RMD" Submit="@FormSubmit">
        <RadzenStack>
            <RadzenFormField Text="Date From" Variant="Variant.Outlined">
                <ChildContent>
                    <RadzenDatePicker DateFormat="MM/dd/yyyy" style="display: block; width: 100%" @bind-Value="@rMD.DateFrom" Name="DateFrom" />
                </ChildContent>
                <Helper>
                    <RadzenRequiredValidator Component="DateFrom" Text="DateFrom is required" />
                </Helper>
            </RadzenFormField>
            <RadzenFormField Text="Date To" Variant="Variant.Outlined">
                <ChildContent>
                    <RadzenDatePicker DateFormat="MM/dd/yyyy" style="display: block; width: 100%" @bind-Value="@rMD.DateTo" Name="DateTo" />
                </ChildContent>
                <Helper>
                    <RadzenRequiredValidator Component="DateTo" Text="DateTo is required" />
                </Helper>
            </RadzenFormField>
            <RadzenFormField Text="Tonnes" Variant="Variant.Outlined">
                <ChildContent>
                    <RadzenNumeric style="display: block; width: 100%" @bind-Value="@rMD.Tonnes" Name="Tonnes" />
                </ChildContent>
                <Helper>
                    <RadzenRequiredValidator Component="Tonnes" Text="Tonnes is required" />
                </Helper>
            </RadzenFormField>
            <RadzenFormField Text="Cu" Variant="Variant.Outlined">
                <ChildContent>
                    <RadzenNumeric style="display: block; width: 100%" @bind-Value="@rMD.Cu" Name="Cu" />
                </ChildContent>
                <Helper>
                    <RadzenRequiredValidator Component="Cu" Text="Cu is required" />
                </Helper>
            </RadzenFormField>
            <RadzenFormField Text="Co" Variant="Variant.Outlined">
                <ChildContent>
                    <RadzenNumeric style="display: block; width: 100%" @bind-Value="@rMD.Co" Name="Co" />
                </ChildContent>
                <Helper>
                    <RadzenRequiredValidator Component="Co" Text="Co is required" />
                </Helper>
            </RadzenFormField>
            <RadzenFormField Text="T Cu" Variant="Variant.Outlined">
                <ChildContent>
                    <RadzenNumeric style="display: block; width: 100%" @bind-Value="@rMD.TCu" Name="TCu" />
                </ChildContent>
                <Helper>
                    <RadzenRequiredValidator Component="TCu" Text="TCu is required" />
                </Helper>
            </RadzenFormField>
            <RadzenFormField Text="T Co" Variant="Variant.Outlined">
                <ChildContent>
                    <RadzenNumeric style="display: block; width: 100%" @bind-Value="@rMD.TCo" Name="TCo" />
                </ChildContent>
                <Helper>
                    <RadzenRequiredValidator Component="TCo" Text="TCo is required" />
                </Helper>
            </RadzenFormField>
            <RadzenFormField Text="Comment" Variant="Variant.Outlined">
                <ChildContent>
                    <RadzenTextBox style="display: block; width: 100%" @bind-Value="@rMD.Comment" Name="Comment" />
                </ChildContent>
            </RadzenFormField>
            <RadzenFormField Text="Entered On" Variant="Variant.Outlined">
                <ChildContent>
                    <RadzenDatePicker DateFormat="MM/dd/yyyy" style="display: block; width: 100%" @bind-Value="@rMD.EnteredOn" Name="EnteredOn" />
                </ChildContent>
            </RadzenFormField>
            <RadzenFormField Text="Entered By" Variant="Variant.Outlined">
                <ChildContent>
                    <RadzenTextBox style="display: block; width: 100%" @bind-Value="@rMD.EnteredBy" Name="EnteredBy" />
                </ChildContent>
            </RadzenFormField>
        </RadzenStack>
        <RadzenStack style="margin-top:1rem;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">
            <RadzenButton ButtonStyle="ButtonStyle.Primary" ButtonType="ButtonType.Submit" Icon="save" Text="Save" Variant="Variant.Flat" />
            <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Cancel" Variant="Variant.Flat" Click="@CancelButtonClick" />
        </RadzenStack>
    </RadzenTemplateForm>
</RadzenColumn>


@code {
    private WeatherForecast[]? forecasts;
    protected bool errorVisible;
    protected RMD rMD;

    protected override async Task OnInitializedAsync()
    {
        // // Simulate asynchronous loading to demonstrate a loading indicator
        // await Task.Delay(500);

        // var startDate = DateOnly.FromDateTime(DateTime.Now);
        // var summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" };
        // forecasts = Enumerable.Range(1, 5).Select(index => new WeatherForecast
        // {
        //     Date = startDate.AddDays(index),
        //     TemperatureC = Random.Shared.Next(-20, 55),
        //     Summary = summaries[Random.Shared.Next(summaries.Length)]
        // }).ToArray();
    }

    private class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public string? Summary { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }

    protected async Task FormSubmit()
    {
    }

    protected async Task CancelButtonClick(MouseEventArgs args)
    {
    }
}
